package ${package.Controller};


import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;
import ${package.Entity}.${entity};
import ${cfg.dueape}.form.${entity}InfoBean;
import ${package.Service}.I${entity}Service;
import ${cfg.dueape}.utils.http.ResponseCode;
import ${cfg.dueape}.utils.http.ResponseResultBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import java.util.List;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end
#else


public class ${table.controllerName} {

    @Autowired
    private I${entity}Service i${entity}Service;


    /**
     * 创建
     * @return
     */
    @PostMapping(value = "/create", produces = "application/json;charset=utf-8")
    public String create(@RequestBody @Validated ${entity}InfoBean infoBean
        ,BindingResult bindingResult){
        if(bindingResult.hasFieldErrors()){
            List<FieldError> errorList=bindingResult.getFieldErrors();
            System.out.println(errorList.toString());
            return ResponseResultBuilder
            .getInstance()
            .genFailure2Json(
            ResponseCode.PARAMATER_FAIL.getIndex(),
            ResponseCode.PARAMATER_FAIL.getName());
        }
        if(i${entity}Service.insert(
        infoBean.to${entity}(new ${entity}()))){
            return ResponseResultBuilder
            .getInstance()
            .genSuccess2Json("创建成功");
        }else{
            return ResponseResultBuilder
            .getInstance()
            .genFailure2Json(
            ResponseCode.DATABASE_FAIL.getIndex(),
            ResponseCode.DATABASE_FAIL.getName());
        }
    }


    /**
     * 更新
     * @return
     */
    @PostMapping(value = "/update/{id}", produces = "application/json;charset=utf-8")
    public String update(@PathVariable("id") Integer id
            ,@RequestBody ${entity}InfoBean infoBean){
        ${entity} entity=i${entity}Service.selectById(id);
        if(entity==null){
            return ResponseResultBuilder
            .getInstance()
            .genFailure2Json(
            ResponseCode.NOT_FOUND_FAIL.getIndex(),
            ResponseCode.NOT_FOUND_FAIL.getName());
        }
        if(i${entity}Service.updateById(
        infoBean.to${entity}(entity))){
            return ResponseResultBuilder
            .getInstance()
            .genSuccess2Json("更新成功");
        }else{
            return ResponseResultBuilder
            .getInstance()
            .genFailure2Json(
            ResponseCode.DATABASE_FAIL.getIndex(),
            ResponseCode.DATABASE_FAIL.getName());
        }
    }

    /**
     * 关闭
     * @return
     */
    @PostMapping(value = "/delete/{id}")
    public String delete(@PathVariable("id") Integer id){
        ${entity} entity=i${entity}Service.selectById(id);
        if(entity==null){
            return ResponseResultBuilder
            .getInstance()
            .genFailure2Json(
            ResponseCode.NOT_FOUND_FAIL.getIndex(),
            ResponseCode.NOT_FOUND_FAIL.getName());
        }
        if(i${entity}Service.deleteById(id)){
            return ResponseResultBuilder
            .getInstance()
            .genSuccess2Json("delete success");
        }else{
            return ResponseResultBuilder
            .getInstance()
            .genFailure2Json(
            ResponseCode.DATABASE_FAIL.getIndex(),
            ResponseCode.DATABASE_FAIL.getName());
        }
    }

    /**
     *
     * @return
     */
    @PostMapping(value = "/index", produces = "application/json; charset=utf-8")
    public String index(@RequestBody ${entity}InfoBean infoBean){
        return i${entity}Service.find${entity}s(infoBean);
    }

}
#end
